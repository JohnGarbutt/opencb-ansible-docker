---
version: '3'
volumes:
    opencga-sessions:
    mongo-catalog-data:
    mongo-store-data:
    solr-data:
    prom-data:
    grafana-data:
    es-data:

networks:
    solr:
    mongo-catalog:
    mongo-store:
    client:
    mon:

services:
    opencga-tomcat:
        build: ./opencga-tomcat
        hostname: opencga-tomcat
        ports:
          - 8080:8080
        volumes:
          - "opencga-sessions:/opt/opencga/sessions:z"
        networks:
          - "client"
          - "solr"
          - "mongo-catalog"
          - "mongo-store"
        depends_on:
          - solr
          - mongo-catalog
          - mongo-store

    opencga-daemon:
        build: ./opencga
        volumes:
          - "opencga-sessions:/opt/opencga/sessions:z"
        networks:
          - "solr"
          - "mongo-catalog"
          - "mongo-store"
        environment:
            - ADMIN_PASSWORD="secret-admin-password"
        depends_on:
          - opencga-tomcat
          - solr
          - mongo-catalog
          - mongo-store

    opencga-client:
        build: ./opencga
        command:
          - /opt/opencga/bin/tutorial.sh
        volumes:
          - "opencga-sessions:/opt/opencga/sessions:z"
        networks:
          - "client"
          - "mongo-catalog"
          - "mongo-store"
        environment:
            - ADMIN_PASSWORD="secret-admin-password"
        depends_on:
          - opencga-tomcat

    solr:
        build: ./opencga-solr
        hostname: solr
        volumes:
          - "solr-data:/opt/solr/mydata"
        networks:
          - solr

    mongo-catalog:
        hostname: mongo-catalog
        image: mongo:3.6
        volumes:
            - mongo-catalog-data:/data/db:rw
        networks:
          - "mongo-catalog"
            
    mongo-store:
        hostname: mongo-store
        image: mongo:3.6
        volumes:
            - mongo-store-data:/data/db:rw
        networks:
          - "mongo-store"

    prom:
        image: prom/prometheus
        ports:
          - 9090:9090
        volumes:
          - "prom-data:/prometheus prom/prometheus"
          - "./prometheus.yml:/etc/prometheus/prometheus.yml"
        #  - "{{ prometheus_home }}/alerts.rules:/etc/prometheus/alerts.rules"
        networks:
          - mon

    grafana:
        image: grafana/grafana
        ports:
          - 3000:3000
        volumes:
            - "grafana-data:/var/lib/grafana"
        networks:
          - mon

    prom-node-exporter:
        image: prom/node-exporter
        pid: host
        volumes:
          - /sys:/host/sys:ro
          - /proc:/host/proc:ro
          - /:/rootfs:ro
          - /etc/hostname:/etc/host_hostname:ro
        user: root
        environment:
          - HOST_HOSTNAME=/etc/host_hostname
          - "collector.procfs=/host/proc"
          - "collector.sysfs=/host/sys"
          - "collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
        deploy:
          mode: global
        networks:
          - mon
          - "client"
          - "solr"
          - "mongo-catalog"
          - "mongo-store"

    cadvisor:
        image: google/cadvisor
        privileged: yes
        volumes:
          - /:/rootfs:ro
          - /var/run:/var/run:rw
          - /sys:/sys:ro
          - /var/lib/docker/:/var/lib/docker:ro
          - /cgroup:/cgroup:ro
        networks:
          - mon
        deploy:
          mode: global

    filebeat:
        build: ./opencga-filebeat
        volumes:
          - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
          - /var/lib/docker/:/var/lib/docker:ro
          - /var/run:/var/run:rw
        depends_on:
          - elasticsearch
          - kibana
        networks:
          - mon

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.0
        environment:
          discovery.type: single-node
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          cluster.name: opencb-logs
          bootstrap.memory_lock: "true"
          TAKE_FILE_OWNERSHIP: "true"
        ulimits:
            memlock: -1 # TODO - does this do soft and hard?
        volumes:
            - "es-data:/usr/share/elasticsearch/data:rw"
        networks:
          - mon

    kibana:
        image: docker.elastic.co/kibana/kibana-oss:6.3.0
        ports:
          - 5601:5601
        environment:
          ELASTICSEARCH_URL: "http://elasticsearch:9200"
        networks:
          - mon
