---
- name: Ensure opencga-base docker dir exists
  file:
    path: "{{ opencga_tomcat_docker }}/base"
    state: directory
    mode: 0755

- name: Generate dockerfile
  template:
    src: dockerfile-base.j2
    dest: "{{ opencga_tomcat_docker }}/base/dockerfile"

- name: Build opencga-base docker image
  docker_image:
    name: opencga-base
    path: "{{ opencga_tomcat_docker }}/base"
    tag: v0.1

- name: Ensure opencga docker dir exists
  file:
    path: "{{ opencga_tomcat_docker }}/daemon"
    state: directory
    mode: 0755

- name: Generate dockerfile
  template:
    src: dockerfile-daemon.j2
    dest: "{{ opencga_tomcat_docker }}/daemon/dockerfile"

- name: Build opencga-daemon docker image
  docker_image:
    name: opencga-daemon
    path: "{{ opencga_tomcat_docker }}/daemon"
    tag: v0.1

- name: Ensure docker dir exists
  file:
    path: "{{ opencga_tomcat_docker }}/tomcat"
    state: directory
    mode: 0755

- name: Generate dockerfile
  template:
    src: dockerfile.j2
    dest: "{{ opencga_tomcat_docker }}/tomcat/dockerfile"

- name: Build opencga-tomcat docker image
  docker_image:
    name: opencga-tomcat
    path: "{{ opencga_tomcat_docker }}/tomcat"
    tag: v0.1

- name: Generate catalog config
  template:
    src: configuration.yml.j2
    dest: "{{ opencga_tomcat_docker }}/configuration.yml"

- name: Generate storage config
  template:
    src: storage-configuration.yml.j2
    dest: "{{ opencga_tomcat_docker }}/storage-configuration.yml"

- name: Add tomcat container
  docker_container:
    name: opencga
    image: opencga-tomcat:v0.1
    state: started
    published_ports:
      - 8080:8080
    volumes:
      - "{{ opencga_tomcat_docker }}/configuration.yml:/opt/opencga/conf/configuration.yml"
      - "{{ opencga_tomcat_docker }}/storage-configuration.yml:/opt/opencga/conf/storage-configuration.yml"
    networks:
      - name: "{{ opencga_tomcat_solr }}"
      - name: "{{ opencga_tomcat_mongo_catalog_suffix }}"
      - name: "{{ opencga_tomcat_mongo_alignment_suffix }}"
      - name: "{{ opencga_tomcat_mongo_variant_suffix }}"

- name: Add daemon container
  docker_container:
    name: opencga-daemon
    image: opencga-daemon:v0.1
    state: started
    volumes:
      - "{{ opencga_tomcat_docker }}/configuration.yml:/opt/opencga/conf/configuration.yml"
      - "{{ opencga_tomcat_docker }}/storage-configuration.yml:/opt/opencga/conf/storage-configuration.yml"
    networks:
      - name: "{{ opencga_tomcat_solr }}"
      - name: "{{ opencga_tomcat_mongo_catalog_suffix }}"
      - name: "{{ opencga_tomcat_mongo_alignment_suffix }}"
      - name: "{{ opencga_tomcat_mongo_variant_suffix }}"

# TODO: fails second time...
- name: install catalog
  command: 'docker exec opencga /bin/bash -c "/opt/opencga/bin/opencga-admin.sh catalog install --algorithm HS256 --secret-key asdf"'

- name: test login
  uri:
    url: http://localhost:8080/opencga-1.2.0/webservices/rest/v1/users/admin/login
    method: POST
    body_format: json
    body: '{ "password": "changeme" }'
    status_code: 200
  register: test_login

- debug:
    msg: "{{ test_login }}"
